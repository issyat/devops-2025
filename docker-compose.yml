version: '3.8'
services:
  client:
    build: ./client
    ports:
      - "5174:5174"
  server:
    build:
      context: ./server
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://your_user:your_password@db:5432/your_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - db
  worker:
    build: ./server
    command: celery -A user_management worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://your_user:your_password@db:5432/your_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - server
      - rabbitmq
      - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  prometheus:
    image: prom/prometheus
    privileged: true  # Use with caution
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'

  proxy:
    image: nginx:alpine
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - client
      - server
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: your_db
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_user -d your_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  pg_data:
  grafana_data: